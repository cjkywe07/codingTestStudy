# 01 Intro

1. 코딩테스트 tip

자료구조와 알고리즘
    자료구조
        데이터를 저장하고 관리하는 방식
        ex) 배열, 리스트, 큐, 스택, 해시테이블 등

    알고리즘
        어떠한 문제를 해결하기 위해 정해진 일련의 절차나 방법
        각 문제에 적합한 알고리즘을 선택하고 평가할 수 있어야 함
            평가기준 : 시간 복잡도
        ex) BFS, DFS, Binary Search, Dijkstra 등

    특정 알고리즘을 구현하기 위해서 꼭 사용해야하는 자료구조가 있으며,
    어떤 자료구조를 선택했는지에 따라 사용할 수 있는 알고리즘이 달라짐

--------------------------------------------------------------------------------

2. 자료구조와 메모리 구조 이해하기

메모리
    데이터를 저장하는 곳

    하드디스크
        코드를 저장하면 하드디스크에 저장됨

    램 메모리
        저장된 코드를 실행하면 램 메모리에 데이터가 올라감
        램 메모리 낭비 및 프로그램 성능 저하를 예방하기 위해 용도와 상황에 맞는 자료구조 선택 필요

        전기 신호 저장(전기가 on되면 1, off되면 0)
        -> 2진법, binary digit(bit)
           8bit = 1byte

--------------------------------------------------------------------------------

3. 시간복잡도 기본

실행시간(running time)
    프로그램이 시작되는 시간부터 모든 코드를 처리하는 데 걸리는 시간

시간 복잡도
    입력값 n에 대한 실행시간 함수가 있을 때 최고차항의 계수만을 이용하여 Big-O 표기
    O(1) < O(logn) < O(n) < O(nlogn) < O(n^2) < O(2^n) < O(n!)

--------------------------------------------------------------------------------

4. 시간복잡도 심화

제약 조건
    실행시간이 짧은, 즉 시간복잡도가 작은 알고리즘을 생각해내야 함

    시간복잡도(Big-O)에 데이터의 크기(n)의 최댓값을 넣어서 나온 값이
    100,000,000(10^8)이 넘으면 시간 제한을 초과할 가능성이 있다

    ex)
        (1) 1 <= n <= 10^5
            -> O(n^3)으로 풀면 10^15 (X)
            -> O(n^2)으로 풀면 10^10 (X) - 즉 n^2 이상의 시간복잡도로 풀면 안된다는 의미
            -> O(1) O(logn) O(n) O(nlogn) 등으로 풀어야 함

        (2) 1 <= n <= 10^4
            -> O(n^2)으로 풀면 10^8 (△) - 약간 애매
            -> O(1) O(logn) O(n) O(nlogn) 등으로 풀어야 함

        (3) 1 <= n <= 10^3
            -> O(n^2)으로 풀면 10^6 (O) - O(n^2)으로도 풀어도 됨

    ex)
        2 <= nums.length <= 10^4 -> O(n^2) 미만으로 풀어야 함
        -10^9 <= nums[i] <= 10^9
        -10^9 <= target <= 10^9

        nums.length, nums[i], target 중 n을 설정하는 방법은
        숫자가 커질수록 실행시간이 증가하는 것을 찾으면 됨
        위의 예시에서는 nums.length가 n

--------------------------------------------------------------------------------

연습문제
    01  Two Sum
    02  Design Browser History
    03  Valid Parentheses
    04  Daily Temperatures
    05  Longest Consecutive Sequence
    06  Lowest Common Ancestor of a Binary Tree
    07  Maximum Depth of Binary Tree
    08  Number of Islands
    09  Shortest Path in Binary Matrix
    10  Keys and Rooms
    11  Climbing Stairs
    12  Min Cost Climbing Stairs
    13  Unique Paths
    14  Network Delay Time
